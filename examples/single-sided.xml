<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">


<bean id="market" class="net.sourceforge.jasa.market.MarketFacade">
	<property name="auctioneer" ref="clearingHouse"/>
	<property name="controller" ref="simulationController"/>
</bean>

<bean id="simulationController" class="net.sourceforge.jabm.SpringSimulationController">
	
	<property name="simulationBeanName">
	   <idref local="marketSimulation"/>
	</property>
	<property name="numSimulations" value="10"/>
	<property name="reports">
		<list>
			<!--<bean class="net.sourceforge.jabm.report.BatchMetaReport">
				<constructor-arg>
					<list>
						<ref bean="transactionPriceReport"/>
						<ref bean="bidPriceReport"/>
						<ref bean="veracityReport"/>
						&lt;!&ndash;  <ref bean="eventReport"/> &ndash;&gt;
					</list>
				</constructor-arg>
			</bean>-->
            <ref bean="priceTimeSeriesChart" />
            <ref bean="transactionPriceTimeSeriesReport" />
            <ref bean="transactionPriceReportVariables" />
            <ref bean="midPriceTimeSeriesReport" />
            <ref bean="midPriceReportVariables" />
            <ref bean="orderFlowReportVariables" />
            <ref bean="orderFlowTimeSeriesReport" />
            <ref bean="setInitialSpreadReport" />
		</list>
	</property>
</bean>

<bean id="equilibriumReport" class="net.sourceforge.jasa.report.EquilibriumReport">
	<constructor-arg ref="market" />
</bean>

<bean id="priceStatisticsReport" class="net.sourceforge.jasa.report.PriceStatisticsReport">
</bean>

<bean id="transactionPriceReport" class="net.sourceforge.jasa.report.TransactionPriceReport">
</bean>

<bean id="bidPriceReport" class="net.sourceforge.jasa.report.BidPriceReport">
</bean>

<bean id="veracityReport" class="net.sourceforge.jasa.report.VeracityReport">
</bean>

<bean id="eventReport" class="net.sourceforge.jasa.report.EventReport">
</bean>

<bean id="agentMixer" class="net.sourceforge.jabm.mixing.RandomRobinAgentMixer">
	<!--<constructor-arg ref="prng"/>-->
    <property name="prng" ref="prng"/>
</bean>

<bean id="marketSimulation" class="net.sourceforge.jasa.market.MarketSimulation">
	<!--<constructor-arg ref="simulationController"/>-->
    <property name="simulationController" ref="simulationController" />
    <property name="market" ref="market"/>
	<property name="maximumRounds" value="200"/>
	<property name="agentInitialiser" ref="agentInitialiser"/>
    <property name="population" ref="population"/>
    <property name="agentMixer" ref="agentMixer"/>
</bean>

<bean id="agentInitialiser" class="net.sourceforge.jasa.agent.MarketAgentInitialiser">
	<property name="market" ref="market"/>
</bean>

<bean id="cda" class="net.sourceforge.jasa.market.auctioneer.ContinuousDoubleAuctioneer">
	<constructor-arg>
		<ref bean="market"/>
	</constructor-arg>
	<property name="pricingPolicy" ref="midPointDiscriminatoryPricingPolicy"/>
</bean>

<bean id="clearingHouse" 
		class="net.sourceforge.jasa.market.auctioneer.ClearingHouseAuctioneer">
	<constructor-arg>
		<ref bean="market"/>
	</constructor-arg>
	<property name="pricingPolicy" ref="secondPrice"/>
	<property name="clearingPolicy" ref="noQueueClearingPolicy"/>
</bean>

<bean id="midPointDiscriminatoryPricingPolicy" 
		class="net.sourceforge.jasa.market.rules.DiscriminatoryPricingPolicy">
	<property name="k" value="0.5"/>
</bean>

<bean id="payAsBidPricingPolicy" 
		class="net.sourceforge.jasa.market.rules.DiscriminatoryPricingPolicy">
	<property name="k" value="1.0"/>
</bean>

<bean id="payAsAskPricingPolicy" 
		class="net.sourceforge.jasa.market.rules.DiscriminatoryPricingPolicy">
	<property name="k" value="0.0"/>
</bean>

<bean id="firstPrice"
		class="net.sourceforge.jasa.market.rules.UniformPricingPolicy">
	<property name="k" value="0.0"/>
</bean>

<bean id="secondPrice"
		class="net.sourceforge.jasa.market.rules.UniformPricingPolicy">
	<property name="k" value="1.0"/>
</bean>

<bean id="noQueueClearingPolicy"
		class="net.sourceforge.jasa.market.rules.NoQueueClearingPolicy">
		<constructor-arg>
			<ref bean="clearingHouse"/>
		</constructor-arg>
</bean>

<bean id="prng" class="cern.jet.random.engine.MersenneTwister64">
	<constructor-arg>
		<bean class="java.util.Date"/>
	</constructor-arg>
</bean>

<bean id="population" class="net.sourceforge.jabm.Population">
	<property name="agentList">
		<bean class="net.sourceforge.jabm.agent.AgentList">
			<constructor-arg>
				<list>
					<ref bean="buyers"/>
					<ref bean="sellers"/>
				</list>
			</constructor-arg>
		</bean>
	</property>
	<property name="prng" ref="prng"/>
</bean>

<bean id="buyers" class="net.sourceforge.jabm.agent.AgentList">
	<constructor-arg value="100"/>
	<constructor-arg ref="buyerFactory"/> 	
</bean>

<bean id="sellers" class="net.sourceforge.jabm.agent.AgentList">
	<constructor-arg value="1"/>
	<constructor-arg ref="sellerFactory"/> 	
</bean>

<bean id="buyerFactory"
	class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
	<property name="targetBeanName">
		<idref local="buyerPrototype" />
	</property>
</bean>

<bean id="sellerFactory"
	class="org.springframework.beans.factory.config.ObjectFactoryCreatingFactoryBean">
	<property name="targetBeanName">
		<idref local="sellerPrototype" />
	</property>
</bean>

<bean id="buyerPrototype" scope="prototype" class="net.sourceforge.jasa.agent.TokenTradingAgent">
	<constructor-arg>
		<ref bean="market"/>
	</constructor-arg>
	<property name="valuationPolicy" ref="randomValuationPolicy"/>
	<!--<property name="utilityFunction" ref="riskAverse"/>-->
	<property name="strategy" ref="stimuliResponse"/>
	<property name="isSeller" value="false"/>
	<property name="initialTradeEntitlement" value="10000"/>
</bean>

<bean id="sellerPrototype" scope="prototype" class="net.sourceforge.jasa.agent.TokenTradingAgent">
	<constructor-arg>
		<ref bean="market"/>
	</constructor-arg>
	<property name="valuationPolicy" ref="sellerValuationPolicy"/>
	<property name="strategy" ref="truthTelling"/>
	<property name="isSeller" value="true"/>
	<property name="initialTradeEntitlement" value="10000"/>
</bean>

<bean id="markupDistribution" class="cern.jet.random.Uniform">
	<constructor-arg index="0" value="0.0" />
	<constructor-arg index="1" value="10.0" />
	<constructor-arg index="2" ref="prng" />
</bean>

<bean id="zic" scope="prototype" 
		class="net.sourceforge.jasa.agent.strategy.RandomConstrainedStrategy">
	<property name="quantity" value="1" />
	<property name="markupDistribution" ref="markupDistribution"/>		
</bean>

<bean id="truthTelling" scope="prototype" 
			class="net.sourceforge.jasa.agent.strategy.TruthTellingStrategy">
    <property name="scheduler" ref="simulationController"/>
</bean>

<bean id="stimuliResponse" scope="prototype" 
		class="net.sourceforge.jasa.agent.strategy.StimuliResponseStrategy">
	<property name="learner" ref="qLearner"/>
	<property name="markupScale" value="0.1"/>
    <property name="scheduler" ref="simulationController"/>
</bean>

<bean id="qLearner" scope="prototype"
    class="net.sourceforge.jabm.learning.StatelessQLearner">
    <constructor-arg ref="prng"/>
    <property name="numberOfActions" value="10"/>
    <property name="learningRate" value="0.5"/>
    <property name="discountRate" value="0.5"/>
    <property name="actionSelector" ref="epsilonGreedyActionSelector"/>
</bean>

<bean id="epsilonGreedyActionSelector" 
        class="net.sourceforge.jabm.learning.EpsilonGreedyActionSelector">
            <!--<constructor-arg ref="prng"/>-->
            <property name="prng" ref="prng"/>
            <property name="epsilon" value="0.05"/>
</bean>

<bean id="rothErev" scope="prototype" 
		class="net.sourceforge.jabm.learning.RothErevLearner">
	<constructor-arg value="10"/>
	<constructor-arg>
		<ref bean="prng"/>
	</constructor-arg>
	<property name="recency" value="0.5"/>
	<property name="experimentation" value="0.05"/>
	<property name="scaling" value="1.0"/>
</bean>

<bean id="randomValuationPolicy" scope="prototype"
	class="net.sourceforge.jasa.agent.valuation.RandomValuer">
	<constructor-arg value="0" />
	<constructor-arg value="1" />
	<constructor-arg ref="prng" />
</bean>

<!--<bean id="riskNeutral" scope="prototype"-->
	<!--class="net.sourceforge.jasa.agent.utility.RiskNeutralUtilityFunction">-->
	<!--<property name="coefficient" value="10"/>-->
<!--</bean>-->

<!--<bean id="riskAverse" scope="prototype"-->
	<!--class="net.sourceforge.jasa.agent.utility.LogUtilityFunction">-->
	<!--<property name="coefficient" value="10"/>-->
<!--</bean>-->

<bean id="sellerValuationPolicy" class="net.sourceforge.jasa.agent.valuation.FixedValuer">	
	<property name="value" value="0"/>
</bean>

    <bean id="priceTimeSeriesChart"
          class="net.sourceforge.jabm.view.TimeSeriesChart">
        <property name="series" ref="priceTimeSeries"/>
        <property name="chartTitle" value="Price time series"/>
        <property name="rangeAxisLabel" value="Price ($)"/>
    </bean>

    <bean id="priceTimeSeries" class="net.sourceforge.jabm.report.CombiSeriesReportVariables">
        <property name="seriesList">
            <list>
                <ref bean="transactionPriceTimeSeries"/>
                <ref bean="midPriceTimeSeries"/>
                <ref bean="orderFlowTimeSeries"/>
            </list>
        </property>
    </bean>

    <bean id="orderFlowTimeSeries" class="net.sourceforge.jabm.report.SeriesReportVariables">
        <property name="reportVariables" ref="orderFlowReportVariables" />
    </bean>

    <bean id="transactionPriceTimeSeries" class="net.sourceforge.jabm.report.SeriesReportVariables">
        <property name="reportVariables" ref="transactionPriceReportVariables" />
    </bean>

    <bean id="transactionPriceReportVariables"
          class="net.sourceforge.jasa.report.TransactionPriceReportVariables">
    </bean>

    <bean id="midPriceTimeSeries" class="net.sourceforge.jabm.report.SeriesReportVariables">
        <property name="reportVariables" ref="midPriceReportVariables" />
    </bean>

    <bean id="midPriceReportVariables" class="net.sourceforge.jasa.report.MidPriceReportVariables">
    </bean>

    <bean id="orderFlowReportVariables" class="net.sourceforge.jasa.report.OfferPriceReportVariables">
    </bean>

    <bean id="transactionPriceTimeSeriesReport" class="net.sourceforge.jabm.report.SimEventReport">
        <property name="eventPrototype">
            <bean class="net.sourceforge.jasa.event.TransactionExecutedEvent">
            </bean>
        </property>
        <property name="reportVariables" ref="transactionPriceTimeSeries"/>
    </bean>

    <bean id="midPriceTimeSeriesReport" class="net.sourceforge.jabm.report.SimEventReport">
        <property name="eventPrototype">
            <bean class="net.sourceforge.jasa.event.OrderPlacedEvent">
            </bean>
        </property>
        <property name="reportVariables" ref="midPriceTimeSeries"/>
    </bean>

    <bean id="orderFlowTimeSeriesReport" class="net.sourceforge.jabm.report.SimEventReport">
        <property name="eventPrototype">
            <bean class="net.sourceforge.jasa.event.OrderPlacedEvent">
            </bean>
        </property>
        <property name="reportVariables" ref="orderFlowCSVFile" />
    </bean>

    <bean id="orderFlowCSVFile"
          class="net.sourceforge.jabm.report.CSVReportVariables">
        <property name="reportVariables" ref="orderFlowReportVariables"/>
        <property name="fileNamePrefix" value="data/" />
        <property name="fileNameSuffix" value="orderflow" />
        <property name="fileNameExtension" value=".csv" />
    </bean>

    <bean id="setInitialSpreadReport"
          class="net.sourceforge.jasa.report.SetInitialSpreadReport">
        <property name="askPrice" value="1500"/>
        <property name="bidPrice" value="500"/>
        <property name="market" ref="market"/>
        <property name="tradingAgent" ref="fixedPriceBuyerPrototype"/>
    </bean>

    <bean id="fixedPriceBuyerPrototype" scope="prototype"
          class="net.sourceforge.jasa.agent.TokenTradingAgent">
        <!--  <property name="market" ref="market"/> -->
        <property name="strategy" ref="truthTellingStrategy"/>
        <property name="valuationPolicy" ref="fixedValuation90"/>
        <property name="isSeller" value="false"/>
        <property name="initialTradeEntitlement" value="100"/>
    </bean>

</beans>